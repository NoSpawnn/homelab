- name: Ensure quadlet dir exists
  ansible.builtin.file:
    path: "{{ quadlet_dest | dirname }}"
    state: directory
    mode: "0755"

- name: Ensure data dir exists
  ansible.builtin.file:
    path: "{{ quadlet_app_dest_dir }}"
    state: directory
    mode: "0755"

- name: Copy quadlet file
  ansible.builtin.copy:
    src: "{{ quadlet_src_dir }}/{{ quadlet_app_name }}.kube"
    dest: "{{ quadlet_dest }}"
    owner: root
    group: root
    mode: "0644"
  notify:
    - Restart {{ quadlet_app_name }}

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: true

- name: Copy application yaml
  notify:
    - Restart {{ quadlet_app_name }}
  block:
    - name: Check if template
      delegate_to: localhost
      ansible.builtin.stat:
        path: "{{ quadlet_src_dir }}/app.yaml.j2"
      register: kube_yaml_j2

    - name: Template and copy application yaml
      ansible.builtin.template:
        src: "{{ quadlet_src_dir }}/app.yaml.j2"
        dest: "{{ quadlet_app_dest_dir }}/app.yaml"
        owner: root
        group: root
        mode: "0644"
      when: kube_yaml_j2.stat.exists

    - name: Copy application yaml
      ansible.builtin.copy:
        src: "{{ quadlet_src_dir }}/app.yaml"
        dest: "{{ quadlet_app_dest_dir }}/app.yaml"
        owner: root
        group: root
        mode: "0644"
      when: not kube_yaml_j2.stat.exists

- name: Template and copy app files
  when: quadlet_app_files is defined and quadlet_app_files | length > 0
  notify:
    - Restart {{ quadlet_app_name }}
  block:
    - name: Template and copy {{ filename }}
      ansible.builtin.template:
        src: "{{ quadlet_src_dir }}/{{ filename }}"
        dest: "{{ quadlet_app_dest_dir }}/{{ filename | regex_replace('\\.j2$', '') }}"
        owner: root
        group: root
        mode: "0644"
      when: (filename.split('.') | last) == 'j2'
      loop: "{{ quadlet_app_files }}"
      loop_control:
        loop_var: filename
        label: "{{ filename }}"

    - name: Copy {{ filename }}
      ansible.builtin.copy:
        src: "{{ quadlet_src_dir }}/{{ filename }}"
        dest: "{{ quadlet_app_dest_dir }}/{{ filename }}"
        owner: root
        group: root
        mode: "0644"
      when: (filename.split('.') | last) != 'j2'
      loop: "{{ quadlet_app_files }}"
      loop_control:
        loop_var: filename
        label: "{{ filename }}"
